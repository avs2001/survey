{
  "openapi": "3.0.1",
  "info": {
    "title": "Kinetiqx ApiGateway",
    "description": "N/A",
    "contact": {
      "name": "n/a",
      "email": "n/a"
    },
    "version": "v1"
  },
  "paths": {
    "/api/admin/datasource/{datasourceKey}/remote-action": {
      "get": {
        "tags": [
          "Admin / Datasource"
        ],
        "parameters": [
          {
            "name": "datasourceKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteDatasourceActionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/invitation-code": {
      "get": {
        "tags": [
          "Admin / InvitationCode"
        ],
        "summary": "Get a list of all the invitations codes\r\nStatus = requested, approved, activated",
        "parameters": [
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ReceiveUpdatesConsent",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryInvitationsResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/invitation-code/{invitationCodeId}/send": {
      "put": {
        "tags": [
          "Admin / InvitationCode"
        ],
        "summary": "Approves a invitation code.",
        "parameters": [
          {
            "name": "invitationCodeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/system-user": {
      "post": {
        "tags": [
          "Admin / SystemUser"
        ],
        "summary": "Creates a system user.\r\nUserType can be one of the System User Types: \r\nSuperAdmin = 1, ITAdmin = 2, ChiefSecurityOfficer = 3, SystemAdmin = 4, TechnicalSupport = 5, CustomerSupport = 6",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSystemUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/system-user/{id}": {
      "get": {
        "tags": [
          "Admin / SystemUser"
        ],
        "summary": "Get the specific system user profile information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organization User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin / SystemUser"
        ],
        "summary": "Update specific system user profile information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organization User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystemUserRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin / SystemUser"
        ],
        "summary": "Delete specific system user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organization User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/system-users": {
      "get": {
        "tags": [
          "Admin / SystemUser"
        ],
        "summary": "Query system users.",
        "parameters": [
          {
            "name": "UserType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuerySystemUsersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant": {
      "post": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Creates a tenant.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/{id}": {
      "get": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Get specific tenant information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organization Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Update specific tenant information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organization Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Delete specific tenant.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Organization Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenants": {
      "get": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Query tenants.",
        "parameters": [
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryTenantsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/{organizationId}/system-user/{id}/association": {
      "put": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Associate system user to tenant.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Organization User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Disassociate system user from tenant.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Organization User Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/{organizationId}/system-users": {
      "get": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Query associations with system users for specific tenant.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UserType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Associated",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryTenantUsersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/{organizationId}/device/{deviceId}/association": {
      "put": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Associate device to tenant.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Disassociate device from tenant.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isDeviceOk",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/{organizationId}/devices": {
      "get": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Query devices for specific tenant.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "State",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeEndedAssociations",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryTenantDeviceAssociationsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/{organizationId}/users": {
      "get": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Query users for specific tenant.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryTenantUsersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/{organizationId}/user/{organizationUserId}": {
      "get": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Get user information.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "organizationUserId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/{organizationId}/hcps": {
      "get": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Query HCPs for specific tenant.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryHCPsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/{organizationId}/user/{organizationUserId}/impersonate": {
      "post": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Impersonate user.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "organizationUserId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/{organizationId}/datasource": {
      "post": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Create datasource for specific tenant.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDatasourceForTenantRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/{organizationId}/datasource/{datasourceId}": {
      "delete": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Delete datasource from tenant.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasourceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/cloud-datasource-templates": {
      "get": {
        "tags": [
          "Admin / Tenant"
        ],
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryCloudDatasourceTemplatesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/cloud-datasource-templates/ids": {
      "get": {
        "tags": [
          "Admin / Tenant"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/cloud-datasource-templates/{dataSourceTemplateId}": {
      "get": {
        "tags": [
          "Admin / Tenant"
        ],
        "parameters": [
          {
            "name": "dataSourceTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryCloudDataSourceResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/{organizationId}/datasources": {
      "get": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Query datasources for specific tenant.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryDatasourceForTenantResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/{organizationId}/datasource/{datasourceKey}": {
      "put": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Associates the datasource to a tenant",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "datasourceKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/tenant/{organizationId}/user/{organizationUserId}/send-confirmation-email": {
      "post": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Resend invitation email for user.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "organizationUserId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/admin/tenant/{organizationId}/user/{organizationUserId}/request-password-reset": {
      "post": {
        "tags": [
          "Admin / Tenant"
        ],
        "summary": "Request password reset",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "organizationUserId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/admin/tenant/{organizationId})/rate-limits": {
      "get": {
        "tags": [
          "Admin / Tenant"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTenantRateLimitsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/common/user-tenants": {
      "get": {
        "tags": [
          "Common / Common"
        ],
        "summary": "Get a list of tenants the current user is associated with",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTenantsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/common/info": {
      "get": {
        "tags": [
          "Common / Common"
        ],
        "summary": "Get the system translations and current user id, type and permissions",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/common/tenant/{name}/exists": {
      "head": {
        "tags": [
          "Common / Common"
        ],
        "summary": "Verifies if a tenant exists by its name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/common/user/email/{email}/exists": {
      "head": {
        "tags": [
          "Common / Common"
        ],
        "summary": "Checks if user exists by specific email.",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/common/user/username/{username}/exists": {
      "head": {
        "tags": [
          "Common / Common"
        ],
        "summary": "Checks if user exists by specific username.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/common/application/register": {
      "post": {
        "tags": [
          "Common / Common"
        ],
        "summary": "Creates the device for Physician or Patient user type.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/common/user/email/{email}/request-password-reset": {
      "post": {
        "tags": [
          "Common / Common"
        ],
        "summary": "Request password reset by user email.",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/common/tenant/rate-limit": {
      "options": {
        "tags": [
          "Common / Common"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRateLimitConfigurationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/common/aggregation/filters": {
      "options": {
        "tags": [
          "Common / Common"
        ],
        "summary": "Returns the intervals and types for aggregation.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAggregationTypesAndIntervalsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/common/email/send": {
      "post": {
        "tags": [
          "Common / Common"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/datasources": {
      "get": {
        "tags": [
          "Config"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasourcesConfigModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/global-parameters": {
      "get": {
        "tags": [
          "Config"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGlobalParameterConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/device/organization/{organizationId}/patient/{id}/association/exists": {
      "head": {
        "tags": [
          "DeviceApi"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/device/organization/{organizationId}/patient/{id}/association": {
      "put": {
        "tags": [
          "DeviceApi"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DeviceApi"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/device/data": {
      "post": {
        "tags": [
          "DeviceApi"
        ],
        "summary": "Upload a session of data.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDeviceDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveDeviceDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/hcp": {
      "get": {
        "tags": [
          "HCP / HcpApi"
        ],
        "summary": "Gets the current physician user profile data.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HCPResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "HCP / HcpApi"
        ],
        "summary": "Updates the current physician user profile data.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HCPSelfUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/hcp/patients": {
      "get": {
        "tags": [
          "HCP / HcpApi"
        ],
        "summary": "Query the patients for current physician.",
        "parameters": [
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Unassigned",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryHCPPatientsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/hcp/patient/{patientId}": {
      "get": {
        "tags": [
          "HCP / HcpApi"
        ],
        "summary": "Get the patient information associated to current physician.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/hcp/patient/{patientId}/values": {
      "get": {
        "tags": [
          "HCP / HcpApi"
        ],
        "summary": "Query the parameter values for specific patient.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParameterKey",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Reference",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "StartTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "EndTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryParameterValuesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/hcp/patient/{patientId}/parameter-values-summary": {
      "get": {
        "tags": [
          "HCP / HcpApi"
        ],
        "summary": "Query Patient parameter values summary.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParameterKey",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Reference",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "StartTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "EndTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryParameterValuesSummaryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/hcp/patient/{organizationUserId}/data": {
      "post": {
        "tags": [
          "HCP / HcpApi"
        ],
        "summary": "Save the parameter data for specific patient.",
        "parameters": [
          {
            "name": "organizationUserId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveParameterDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/hcp/datasources": {
      "get": {
        "tags": [
          "HCP / HcpApi"
        ],
        "summary": "Query all datasources for your tenant.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryDatasourceForTenantResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/hcp/datasource/{datasourceId}": {
      "get": {
        "tags": [
          "HCP / HcpApi"
        ],
        "summary": "Get datasource for your tenant",
        "parameters": [
          {
            "name": "datasourceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryDataSourceResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/hcp/parameter-values-csv": {
      "get": {
        "tags": [
          "HCP / HcpApi"
        ],
        "summary": "Download the Parameter Values in Csv format",
        "parameters": [
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DeviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParameterKey",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Reference",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "EndTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/hcp/aggregated-numeric-parameters": {
      "get": {
        "tags": [
          "HCP / HcpApi"
        ],
        "parameters": [
          {
            "name": "StartTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "EndTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Interval",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AggregationType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ParameterKey",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DeviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryNumericAggregatedDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/hcp/patient/{organizationUserId}/values-binning": {
      "get": {
        "tags": [
          "HCP / HcpApi"
        ],
        "parameters": [
          {
            "name": "organizationUserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParameterKey",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Reference",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "EndTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "TotalDataPoints",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ZoomLevel",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryParameterValuesBinningResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/hcp/patient/{id}/parameters": {
      "get": {
        "tags": [
          "HCP / HcpApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseParameterListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/patient/data": {
      "post": {
        "tags": [
          "Patient / PatientApi"
        ],
        "summary": "Save parameters data for current patient.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveParameterDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/patient/values": {
      "get": {
        "tags": [
          "Patient / PatientApi"
        ],
        "summary": "Query the parameter values for current patient.",
        "parameters": [
          {
            "name": "DeviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParameterKey",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Reference",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "StartTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "EndTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryParameterValuesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/patient/values-binning": {
      "get": {
        "tags": [
          "Patient / PatientApi"
        ],
        "parameters": [
          {
            "name": "ParameterKey",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Reference",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "EndTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "TotalDataPoints",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ZoomLevel",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryParameterValuesBinningResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/patient/device/{serialNumber}/status": {
      "get": {
        "tags": [
          "Patient / PatientApi"
        ],
        "summary": "Get Device status for a Patient.",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/patient/register-device": {
      "post": {
        "tags": [
          "Patient / PatientApi"
        ],
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceForPatientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/patient/device/{id}": {
      "delete": {
        "tags": [
          "Patient / PatientApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/patient/datasources": {
      "get": {
        "tags": [
          "Patient / PatientApi"
        ],
        "parameters": [
          {
            "name": "isCloudDatasource",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryPatientDatasourceForTenantResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/patient/datasources/{id}": {
      "get": {
        "tags": [
          "Patient / PatientApi"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientClouddataSourceResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/patient/parameters": {
      "get": {
        "tags": [
          "Patient / PatientApi"
        ],
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseParameterListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/patient": {
      "get": {
        "tags": [
          "Patient / PatientApi"
        ],
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Patient / PatientApi"
        ],
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/patient/patient/devices": {
      "get": {
        "tags": [
          "Patient / PatientApi"
        ],
        "parameters": [
          {
            "name": "onlyValid",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPatientDevicesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/register/tenant": {
      "post": {
        "tags": [
          "Register / Registration"
        ],
        "summary": "Register a tenant with a tenant admin based on an invitation code.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterTenantRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/register/request-invite": {
      "post": {
        "tags": [
          "Register / Registration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/system-user": {
      "get": {
        "tags": [
          "SystemUser / SystemUserApi"
        ],
        "summary": "Returns the information for the system user that's making the request.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseUserResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SystemUser / SystemUserApi"
        ],
        "summary": "Updates the information of the system user that is making the request.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemUserSelfUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/tenant-admin/group/{name}/exists": {
      "head": {
        "tags": [
          "TenantAdmin / Groups"
        ],
        "summary": "Check if group exists by name.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/group": {
      "post": {
        "tags": [
          "TenantAdmin / Groups"
        ],
        "summary": "Create group for your tenant.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/group/{id}": {
      "put": {
        "tags": [
          "TenantAdmin / Groups"
        ],
        "summary": "Update group by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TenantAdmin / Groups"
        ],
        "summary": "Delete group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/groups": {
      "get": {
        "tags": [
          "TenantAdmin / Groups"
        ],
        "summary": "Query the groups for your tenant.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryGroupsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/group/{groupId}/user/{organizationUserId}/member": {
      "put": {
        "tags": [
          "TenantAdmin / Groups"
        ],
        "summary": "Add user to a group.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "organizationUserId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TenantAdmin / Groups"
        ],
        "summary": "Remove user from group.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "organizationUserId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/group/{groupId}/members": {
      "get": {
        "tags": [
          "TenantAdmin / Groups"
        ],
        "summary": "Query group members.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryGroupMembersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/group/{groupId}/nonmembers": {
      "get": {
        "tags": [
          "TenantAdmin / Groups"
        ],
        "summary": "Query group non members.",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryGroupMembersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/hcp": {
      "post": {
        "tags": [
          "TenantAdmin / HCP"
        ],
        "summary": "Create an HCP.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHCPRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/hcp/{externalUserId}/invite": {
      "post": {
        "tags": [
          "TenantAdmin / HCP"
        ],
        "summary": "Invite a HCP.",
        "parameters": [
          {
            "name": "externalUserId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteHCPRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/hcp/{id}": {
      "get": {
        "tags": [
          "TenantAdmin / HCP"
        ],
        "summary": "Get HCP information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "HCP Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HCPResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TenantAdmin / HCP"
        ],
        "summary": "Update UCP information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "HCP Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHCPRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TenantAdmin / HCP"
        ],
        "summary": "Delete an HCP.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "HCP Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/hcps": {
      "get": {
        "tags": [
          "TenantAdmin / HCP"
        ],
        "summary": "Get a list of HCPs.",
        "parameters": [
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryHCPsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/hcp/external": {
      "get": {
        "tags": [
          "TenantAdmin / HCP"
        ],
        "summary": "Query extenal HCPs",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryExternalHCPResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/hcp/{id}/patient/{patientId}/association": {
      "put": {
        "tags": [
          "TenantAdmin / HCP"
        ],
        "summary": "Associate Patient to HCP.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "patientId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TenantAdmin / HCP"
        ],
        "summary": "Disassociate Patient from HCP.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "patientId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/hcp/{id}/patients": {
      "get": {
        "tags": [
          "TenantAdmin / HCP"
        ],
        "summary": "Get a list of patients for an HCP",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "HCP Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Unassigned",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryHCPPatientsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/parameter-values": {
      "get": {
        "tags": [
          "TenantAdmin / ParameterValues"
        ],
        "summary": "Query parameter values.",
        "parameters": [
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DeviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParameterKey",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Reference",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "StartTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "EndTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryParameterValuesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TenantAdmin / ParameterValues"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDeviceDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveDeviceDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/parameter-values-binning": {
      "get": {
        "tags": [
          "TenantAdmin / ParameterValues"
        ],
        "parameters": [
          {
            "name": "organizationUserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParameterKey",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Reference",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "EndTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "TotalDataPoints",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ZoomLevel",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryParameterValuesBinningResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/parameter-values-csv": {
      "get": {
        "tags": [
          "TenantAdmin / ParameterValues"
        ],
        "summary": "Download the Parameter Values in Csv format",
        "parameters": [
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DeviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParameterKey",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Reference",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "EndTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/parameter-values-summary": {
      "get": {
        "tags": [
          "TenantAdmin / ParameterValues"
        ],
        "summary": "Query parameter values summary report.",
        "parameters": [
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DeviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParameterKey",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Reference",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "StartTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "EndTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryParameterValuesSummaryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/aggregated-numeric-parameters": {
      "get": {
        "tags": [
          "TenantAdmin / ParameterValues"
        ],
        "parameters": [
          {
            "name": "StartTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "EndTimestamp",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Interval",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AggregationType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ParameterKey",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DeviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryNumericAggregatedDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/patient": {
      "post": {
        "tags": [
          "TenantAdmin / Patient"
        ],
        "summary": "Create a patient.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/patient/{id}": {
      "post": {
        "tags": [
          "TenantAdmin / Patient"
        ],
        "summary": "Create a patient with full profile information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFullPatientRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "TenantAdmin / Patient"
        ],
        "summary": "Get patient information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Patient Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TenantAdmin / Patient"
        ],
        "summary": "Update information for a patient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Patient Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePatientRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TenantAdmin / Patient"
        ],
        "summary": "Delete a patient.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Patient Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/patient/{patientExternalId}/exists": {
      "head": {
        "tags": [
          "TenantAdmin / Patient"
        ],
        "summary": "Check if a patient exists by external patient id.",
        "parameters": [
          {
            "name": "patientExternalId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/patients": {
      "get": {
        "tags": [
          "TenantAdmin / Patient"
        ],
        "summary": "Get a list of patients.",
        "parameters": [
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryPatientsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/patients/temporary": {
      "get": {
        "tags": [
          "TenantAdmin / Patient"
        ],
        "summary": "Query temporary patients.",
        "parameters": [
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryTemporaryPatientsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/patient/{id}/hcps": {
      "get": {
        "tags": [
          "TenantAdmin / Patient"
        ],
        "summary": "Query associated HCPs to patient.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Unassigned",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryPatientHCPsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/patient/{id}/device/{deviceId}/association": {
      "put": {
        "tags": [
          "TenantAdmin / Patient"
        ],
        "summary": "Associate a device to a patient.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Patient Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "Device Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TenantAdmin / Patient"
        ],
        "summary": "Disassociate a device from a patient.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Patient Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "Device Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/patient/{organizationUserId}/data": {
      "post": {
        "tags": [
          "TenantAdmin / Patient"
        ],
        "parameters": [
          {
            "name": "organizationUserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveParameterDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/datasource": {
      "post": {
        "tags": [
          "TenantAdmin / TenantDatasource"
        ],
        "summary": "Create datasource for tenant.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDatasourceForTenantRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/cloud-datasource": {
      "post": {
        "tags": [
          "TenantAdmin / TenantDatasource"
        ],
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCloudDatasourceForTenantRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/datasources": {
      "get": {
        "tags": [
          "TenantAdmin / TenantDatasource"
        ],
        "summary": "Query all datasources for your tenant.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryDatasourceForTenantResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/datasource/{datasourceId}": {
      "get": {
        "tags": [
          "TenantAdmin / TenantDatasource"
        ],
        "summary": "Get datasource for your tenant.",
        "parameters": [
          {
            "name": "datasourceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryDataSourceResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TenantAdmin / TenantDatasource"
        ],
        "summary": "Delete a datasource for your tenant.",
        "parameters": [
          {
            "name": "datasourceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/datasource/{datasourceKey}/remote-action": {
      "get": {
        "tags": [
          "TenantAdmin / TenantDatasource"
        ],
        "parameters": [
          {
            "name": "datasourceKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoteDatasourceActionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/datasource/{datasourceKey}": {
      "put": {
        "tags": [
          "TenantAdmin / TenantDatasource"
        ],
        "summary": "Associates the datasource to a tenant",
        "parameters": [
          {
            "name": "datasourceKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/device/serialnumber/{serialNumber}/exists": {
      "head": {
        "tags": [
          "TenantAdmin / TenantDevice"
        ],
        "summary": "Check if serial number exists.",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/device/{id}": {
      "get": {
        "tags": [
          "TenantAdmin / TenantDevice"
        ],
        "summary": "Get a device.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TenantAdmin / TenantDevice"
        ],
        "summary": "Update a device.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Device Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDeviceRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TenantAdmin / TenantDevice"
        ],
        "summary": "Delete Device",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/devices": {
      "get": {
        "tags": [
          "TenantAdmin / TenantDevice"
        ],
        "summary": "Get a list of all the devices in the system",
        "parameters": [
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "State",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeEndedAssociations",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryDevicesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/device": {
      "post": {
        "tags": [
          "TenantAdmin / TenantDevice"
        ],
        "summary": "Create device for your tenant.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceForTenantRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeviceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/device/{id}/state/{state}": {
      "put": {
        "tags": [
          "TenantAdmin / TenantDevice"
        ],
        "summary": "Update device state.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "state",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/device/{id}/certificate/generate": {
      "get": {
        "tags": [
          "TenantAdmin / TenantDevice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateAndKeys"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/device/data": {
      "post": {
        "tags": [
          "TenantAdmin / TenantDevice"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDeviceDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveDeviceDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/tenant-user": {
      "post": {
        "tags": [
          "TenantAdmin / TenantUser"
        ],
        "summary": "Create a tenant user.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceIdResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/tenant-user/{id}": {
      "get": {
        "tags": [
          "TenantAdmin / TenantUser"
        ],
        "summary": "Get the information for a tenant user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TenantAdmin / TenantUser"
        ],
        "summary": "Update the information for a tenant user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantUserRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TenantAdmin / TenantUser"
        ],
        "summary": "Delete a tenant user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/tenant-users": {
      "get": {
        "tags": [
          "TenantAdmin / TenantUser"
        ],
        "summary": "Query tenant users.",
        "parameters": [
          {
            "name": "UserType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryTenantUsersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/tenant": {
      "get": {
        "tags": [
          "TenantAdmin / TenantUser"
        ],
        "summary": "Get information for your tenant.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TenantAdmin / TenantUser"
        ],
        "summary": "Update your tenant.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenant-admin/tenant/user/{organizationUserId}/send-confirmation-email": {
      "post": {
        "tags": [
          "TenantAdmin / TenantUser"
        ],
        "summary": "Resend invitation email for specific user.",
        "parameters": [
          {
            "name": "organizationUserId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/tenant-admin/tenant/user/{organizationUserId}/request-password-reset": {
      "post": {
        "tags": [
          "TenantAdmin / TenantUser"
        ],
        "summary": "Request password reset",
        "parameters": [
          {
            "name": "organizationUserId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/tenant-admin": {
      "get": {
        "tags": [
          "TenantUser / TenantUserApi"
        ],
        "summary": "Get your profile information.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseUserResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TenantUser / TenantUserApi"
        ],
        "summary": "Update your profile information.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantUserSelfUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/user/{identityProviderId}/lastlogin": {
      "post": {
        "tags": [
          "User / User"
        ],
        "summary": "Set last login time for a specific user.",
        "parameters": [
          {
            "name": "identityProviderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/user/{identityProviderId}/lockedstatus": {
      "post": {
        "tags": [
          "User / User"
        ],
        "summary": "Set locked status for specific user.",
        "parameters": [
          {
            "name": "identityProviderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/user/{organizationUserId}/lockedstatus": {
      "delete": {
        "tags": [
          "User / User"
        ],
        "summary": "Remove locked status for specific user.",
        "parameters": [
          {
            "name": "organizationUserId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/user/{identityProviderId}/pendingstatus": {
      "delete": {
        "tags": [
          "User / User"
        ],
        "summary": "Remove pending activation status for specific user.s",
        "parameters": [
          {
            "name": "identityProviderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/user/reset-password": {
      "post": {
        "tags": [
          "User / User"
        ],
        "summary": "Reset your password.",
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/user/visualization-preference": {
      "put": {
        "tags": [
          "User / User"
        ],
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileParameterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User / User"
        ],
        "parameters": [
          {
            "name": "X-OrganizationId",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileValueResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessTokenResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AggregationData": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Attribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseHCPResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "lastLoginTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isPendingActivation": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "userType": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "acceptedTerms": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseParameterListResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseParameterResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseParameterResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "config": {
            "$ref": "#/components/schemas/ParameterConfig"
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "parentParameterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isNumeric": {
            "type": "boolean"
          },
          "isHierarchical": {
            "type": "boolean"
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "BasePatientResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "lastLoginTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isPendingActivation": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "userType": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "acceptedTerms": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "lastLoginTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isPendingActivation": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "userType": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "acceptedTerms": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BinningParameterValueView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "parameterKey": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "startTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "endTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "unitMeasure": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "dataPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPoint"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CertificateAndKeys": {
        "type": "object",
        "properties": {
          "certificate": {
            "type": "string",
            "nullable": true
          },
          "publicKey": {
            "type": "string",
            "nullable": true
          },
          "privateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCloudDatasourceForTenantRequest": {
        "required": [
          "cloudDatasource",
          "datasourceAction",
          "datasourceName",
          "parameterKeys"
        ],
        "type": "object",
        "properties": {
          "datasourceName": {
            "type": "string"
          },
          "datasourceAction": {
            "type": "string"
          },
          "parameterKeys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cloudDatasource": {
            "$ref": "#/components/schemas/CreateCloudDatasourceRequest"
          }
        },
        "additionalProperties": false
      },
      "CreateCloudDatasourceRequest": {
        "required": [
          "authorizationUri",
          "clientId",
          "clientSecret",
          "cloudDataSourceTemplateId",
          "tokenUri",
          "userInfoUri"
        ],
        "type": "object",
        "properties": {
          "cloudDataSourceTemplateId": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          },
          "authorizationUri": {
            "type": "string"
          },
          "tokenUri": {
            "type": "string"
          },
          "userInfoUri": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateDatasourceForTenantRequest": {
        "required": [
          "datasourceAction",
          "datasourceName",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "datasourceKey": {
            "type": "string",
            "nullable": true
          },
          "datasourceName": {
            "type": "string"
          },
          "datasourceAction": {
            "type": "string"
          },
          "remoteActionEndpoint": {
            "type": "string",
            "nullable": true
          },
          "remoteActionSecret": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateParametersForDatasourceRequest"
            }
          }
        },
        "additionalProperties": false
      },
      "CreateDeviceCommand": {
        "type": "object",
        "properties": {
          "datasourceId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateDeviceForPatientRequest": {
        "required": [
          "datasourceKey",
          "deviceName",
          "serialNumber",
          "softwareVersion"
        ],
        "type": "object",
        "properties": {
          "datasourceKey": {
            "type": "string"
          },
          "deviceName": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "softwareVersion": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateDeviceForTenantRequest": {
        "required": [
          "datasourceId",
          "name",
          "serialNumber",
          "softwareVersion"
        ],
        "type": "object",
        "properties": {
          "datasourceId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "softwareVersion": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateDeviceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "certificate": {
            "type": "string",
            "nullable": true
          },
          "publicKey": {
            "type": "string",
            "nullable": true
          },
          "privateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateFullPatientRequest": {
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "phone": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "string",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "minimum": 0,
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "weight": {
            "minimum": 0,
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateGroupRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 55,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parentGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateHCPRequest": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "userType"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "phone": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "practice": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "speciality": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address1": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "state": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "userType": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateParametersForDatasourceRequest": {
        "required": [
          "isNumeric",
          "name"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "isNumeric": {
            "type": "boolean"
          },
          "config": {
            "$ref": "#/components/schemas/ParameterConfig"
          }
        },
        "additionalProperties": false
      },
      "CreatePatientRequest": {
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "phone": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "string",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "minimum": 0,
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "weight": {
            "minimum": 0,
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSystemUserRequest": {
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "phone": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "userType": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateTenantRequest": {
        "required": [
          "tenancyName"
        ],
        "type": "object",
        "properties": {
          "tenancyName": {
            "type": "string"
          },
          "countryCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "admin": {
            "$ref": "#/components/schemas/CreateUserRequest"
          }
        },
        "additionalProperties": false
      },
      "CreateTenantUserRequest": {
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "phone": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "userType": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateUserRequest": {
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "phone": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataPoint": {
        "type": "object",
        "properties": {
          "startTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "endTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Datasource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Parameter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DatasourceAction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DatasourcesConfigModel": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatasourceAction"
            },
            "nullable": true
          },
          "datasources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Datasource"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "datasourceId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "softwareVersion": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "updatedAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "datasourceName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorModel": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "nullable": true
          },
          "field": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalHCPResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "inCurrentTenant": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetAggregationTypesAndIntervalsResponse": {
        "type": "object",
        "properties": {
          "aggregationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AggregationData"
            },
            "nullable": true
          },
          "aggregationIntervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AggregationData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetDeviceStatusResponse": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "associatedWithTenant": {
            "type": "boolean"
          },
          "associatedWithPatient": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetGlobalParameterConfigResponse": {
        "type": "object",
        "properties": {
          "globalParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterConfigResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetPatientDevicesResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatientDeviceView"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRateLimitConfigurationResponse": {
        "type": "object",
        "properties": {
          "datasourcesLimit": {
            "type": "integer",
            "format": "int32"
          },
          "devicesLimit": {
            "type": "integer",
            "format": "int32"
          },
          "patientsLimit": {
            "type": "integer",
            "format": "int32"
          },
          "tenantUsersLimit": {
            "type": "integer",
            "format": "int32"
          },
          "hcpsLimit": {
            "type": "integer",
            "format": "int32"
          },
          "tenantsLimit": {
            "type": "integer",
            "format": "int32"
          },
          "tenantRequestLimit": {
            "type": "integer",
            "format": "int32"
          },
          "rawStorageLimit": {
            "type": "string",
            "nullable": true
          },
          "datasourcesRemainingLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "devicesRemainingLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "patientsRemainingLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenantUsersRemainingLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hcpsRemainingLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenantsRemainingLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetTenantRateLimitsResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RateLimitListView"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupMemberResponse": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "integer",
            "format": "int64"
          },
          "userType": {
            "type": "integer",
            "format": "int32"
          },
          "organizationUserId": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parentGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HCPResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "lastLoginTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isPendingActivation": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "userType": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "acceptedTerms": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "practice": {
            "type": "string",
            "nullable": true
          },
          "speciality": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HCPSelfUpdateRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "practice": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "speciality": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address1": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "state": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InfoResponse": {
        "type": "object",
        "properties": {
          "availableLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "currentLanguage": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "userInfo": {
            "$ref": "#/components/schemas/BaseUserResponse"
          }
        },
        "additionalProperties": false
      },
      "InvitationListView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "receiveUpdatesConsent": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "expiresAt": {
            "type": "integer",
            "format": "int64"
          },
          "activatedAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvitationRequest": {
        "required": [
          "captchaToken",
          "company",
          "country",
          "email",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "updates": {
            "type": "boolean"
          },
          "captchaToken": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "InviteHCPRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "userType": {
            "type": "integer",
            "format": "int32"
          },
          "practice": {
            "type": "string",
            "nullable": true
          },
          "speciality": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JsonNode": {
        "type": "object",
        "properties": {
          "options": {
            "$ref": "#/components/schemas/JsonNodeOptions"
          },
          "parent": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "root": {
            "$ref": "#/components/schemas/JsonNode"
          }
        },
        "additionalProperties": false
      },
      "JsonNodeOptions": {
        "type": "object",
        "properties": {
          "propertyNameCaseInsensitive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "NumericAggregatedData": {
        "type": "object",
        "properties": {
          "startTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "endTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PaginationResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Parameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "isNumeric": {
            "type": "boolean"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonNode"
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "parentParameterKey": {
            "type": "string",
            "nullable": true
          },
          "unitMeasure": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParameterAggregation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "intervals": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParameterConfig": {
        "type": "object",
        "properties": {
          "aggregations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterAggregation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParameterConfigResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "isNumeric": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "parentParameterKey": {
            "type": "string",
            "nullable": true
          },
          "unitMeasure": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParameterValueListView": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "parameterKey": {
            "type": "string",
            "nullable": true
          },
          "startTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "endTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "isNumeric": {
            "type": "boolean"
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParameterValueSummaryListView": {
        "type": "object",
        "properties": {
          "startTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "endTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParameterView": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentParameterKey": {
            "type": "string",
            "nullable": true
          },
          "isNumeric": {
            "type": "boolean",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatientClouddataSourceResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "isCloudDatasource": {
            "type": "boolean"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseParameterResponse"
            },
            "nullable": true
          },
          "cloudDataSourceTemplateId": {
            "type": "string",
            "nullable": true
          },
          "maskedClientId": {
            "type": "string",
            "nullable": true
          },
          "authorizationUri": {
            "type": "string",
            "nullable": true
          },
          "tokenUri": {
            "type": "string",
            "nullable": true
          },
          "redirectUri": {
            "type": "string",
            "nullable": true
          },
          "userInfoUri": {
            "type": "string",
            "nullable": true
          },
          "cloudAccountConnectionStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatientDeviceView": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "organizationUserId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "userDeviceAssociationId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "integer",
            "format": "int64"
          },
          "endDate": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lastUsedAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "datasourceId": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "type": "integer",
            "format": "int32"
          },
          "softwareVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatientQueryDataSourcesResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "isCloudDatasource": {
            "type": "boolean"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseParameterResponse"
            },
            "nullable": true
          },
          "cloudAccountConnectionStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatientResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "lastLoginTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isPendingActivation": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "userType": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "acceptedTerms": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "weight": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonaParameter": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "organizationUserId": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "userType": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProfileValueResponse": {
        "type": "object",
        "properties": {
          "profileParameterId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "transactionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryCloudDataSourceResult": {
        "type": "object",
        "properties": {
          "cloudDataSourceTemplateId": {
            "type": "string",
            "nullable": true
          },
          "authorizationGrantType": {
            "type": "string",
            "nullable": true
          },
          "clientAuthenticationMethod": {
            "type": "string",
            "nullable": true
          },
          "userNameAttribute": {
            "type": "string",
            "nullable": true
          },
          "organizationRedirectUri": {
            "type": "string",
            "nullable": true
          },
          "organizationNotificationUri": {
            "type": "string",
            "nullable": true
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "authorizationUris": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "tokenUris": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "userInfoUris": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterView"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryCloudDatasourceTemplatesResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryCloudDataSourceResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryDataSourceResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "isCloudDatasource": {
            "type": "boolean"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseParameterResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryDatasourceForTenantResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryDataSourceResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryDevicesResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryExternalHCPResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalHCPResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryGroupMembersResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupMemberResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryGroupsResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryHCPPatientsResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BasePatientResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryHCPsResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseHCPResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryInvitationsResult": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvitationListView"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryNumericAggregatedDataResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NumericAggregatedData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryParameterValuesBinningResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BinningParameterValueView"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryParameterValuesResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterValueListView"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryParameterValuesSummaryResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterValueSummaryListView"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryPatientDatasourceForTenantResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatientQueryDataSourcesResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryPatientHCPsResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseHCPResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryPatientsResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BasePatientResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuerySystemUsersResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseUserResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryTemporaryPatientsResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemporaryPatientResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryTenantDeviceAssociationsResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantDeviceAssociation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryTenantUsersResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseUserResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryTenantsResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RateLimitListView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "limitKey": {
            "type": "string",
            "nullable": true
          },
          "currentValue": {
            "type": "number",
            "format": "double"
          },
          "maxValue": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "updatedAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "unitMeasure": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterTenantRequest": {
        "required": [
          "tenancyName"
        ],
        "type": "object",
        "properties": {
          "tenancyName": {
            "type": "string"
          },
          "countryCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "admin": {
            "$ref": "#/components/schemas/CreateUserRequest"
          },
          "invitationCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RemoteDatasourceActionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "datasourceKey": {
            "type": "string",
            "nullable": true
          },
          "endpoint": {
            "type": "string",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "updatedAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletedAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceIdResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaveDataResponse": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveDeviceDataRequest": {
        "required": [
          "organizationId",
          "serialNumber"
        ],
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string"
          },
          "data": { },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "metadata": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveDeviceDataResponse": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaveParameterDataRequest": {
        "required": [
          "serialNumber"
        ],
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string"
          },
          "data": { },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "metadata": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendEmailRequest": {
        "required": [
          "body",
          "isBodyHtml",
          "subject",
          "to"
        ],
        "type": "object",
        "properties": {
          "fromEmail": {
            "type": "string",
            "nullable": true
          },
          "fromName": {
            "type": "string",
            "nullable": true
          },
          "to": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "isBodyHtml": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SystemUserSelfUpdateRequest": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phone": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "acceptedTerms": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TemporaryPatientResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "patientId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "TenantDeviceAssociation": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "integer",
            "format": "int64"
          },
          "endDate": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "device": {
            "$ref": "#/components/schemas/DeviceResponse"
          }
        },
        "additionalProperties": false
      },
      "TenantResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "TenantUserSelfUpdateRequest": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phone": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "acceptedTerms": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateDeviceRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "softwareVersion": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateGroupRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 55,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parentGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateHCPRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "practice": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "speciality": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address1": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "state": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePatientRequest": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phone": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "username": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "patientId": {
            "type": "string",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "minimum": 0,
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "weight": {
            "minimum": 0,
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone2": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone3": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone4": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProfileParameterRequest": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateSystemUserRequest": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phone": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "acceptedTerms": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTenantRequest": {
        "type": "object",
        "properties": {
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTenantUserRequest": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phone": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "acceptedTerms": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserTenantResponse": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "tenantName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserTenantsResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTenantResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please enter JWT with Bearer into field",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}